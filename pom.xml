<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2014 All Rights Reserved by the SDL Group.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.sdl.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>0.1.0</version>
    </parent>

    <groupId>com.sdl</groupId>
    <artifactId>odata</artifactId>
    <version>2.3-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>OData v4 Framework</name>
    <description>SDL OData v4 Framework</description>
    <inceptionYear>2014</inceptionYear>

    <modules>
        <module>odata_api</module>
        <module>odata_client_api</module>
        <module>odata_assembly</module>
        <module>odata_checkstyle</module>
        <module>odata_client</module>
        <module>odata_edm</module>
        <module>odata_parser</module>
        <module>odata_processor</module>
        <module>odata_renderer</module>
        <module>odata_service</module>
        <module>odata_test</module>
        <module>odata_common</module>
        <module>odata_controller</module>
        <module>odata_webservice</module>
        <module>odata_war</module>
        <module>odata_client_tracing</module>
    </modules>

    <organization>
        <name>SDL</name>
        <url>http://www.sdl.com/</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Renze de Vries</name>
            <email>rdevries@sdl.com</email>
            <organization>sdl</organization>
            <organizationUrl>http://www.sdl.com</organizationUrl>
        </developer>
        <developer>
            <name>Ben Middleton</name>
            <email>bmiddleton@sdl.com</email>
            <organization>sdl</organization>
            <organizationUrl>http://www.sdl.com</organizationUrl>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:git@github.com:sdl/odata.git</connection>
        <developerConnection>scm:git:git@github.com:sdl/odata.git</developerConnection>
        <url>git@github.com:sdl/odata.git</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <snapshot.qualifier.version>0</snapshot.qualifier.version>
        <maven.build.timestamp.format>yyyy</maven.build.timestamp.format>
        <currentYearDynamic>${maven.build.timestamp}</currentYearDynamic>
        <license.header.file>${project.basedir}/src/license/sdl_license/header.txt</license.header.file>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>1.8</java.version>

        <!-- Third party dependency versions, sorted alphabetically -->
        <akka.version>2.4.1</akka.version>
        <apache-procrun.version>1.0</apache-procrun.version>
        <brave.version>3.8.0</brave.version>
        <guava.version>18.0</guava.version>
        <httpcomponents.version>4.5.2</httpcomponents.version>
        <jackson.version>2.10.0</jackson.version>
        <jacoco.version>0.7.7.201606060606</jacoco.version>
        <junit.version>4.12</junit.version>
        <logback.version>1.1.7</logback.version>
        <mockito.version>1.10.5</mockito.version>
        <scala.version>2.11.7</scala.version>
        <scala-parser-combinators.version>1.0.4</scala-parser-combinators.version>
        <scalatest.version>2.2.6</scalatest.version>
        <servlet-api.version>3.0.1</servlet-api.version>
        <slf4j.version>1.7.12</slf4j.version>
        <spring.version>4.3.3.RELEASE</spring.version>
        <spring-boot.version>1.4.1.RELEASE</spring-boot.version>
        <tomcat.version>8.5.13</tomcat.version>
        <typesafe-config.version>1.2.0</typesafe-config.version>
    </properties>

    <!-- Dependency management -->
    <dependencyManagement>
        <dependencies>
            <!-- Scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-parser-combinators_2.11</artifactId>
                <version>${scala-parser-combinators.version}</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- Utility libraries -->
            <dependency>
                <groupId>org.apache.deamon</groupId>
                <artifactId>apache-procrun</artifactId>
                <classifier>procrun</classifier>
                <version>${apache-procrun.version}</version>
                <type>exe</type>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>2.8.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpcomponents.version}</version>
            </dependency>

            <!-- Akka -->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor_2.11</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-slf4j_2.11</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${typesafe-config.version}</version>
            </dependency>

            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Testing -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_2.11</artifactId>
                <version>${scalatest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-testkit_2.11</artifactId>
                <version>${akka.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Override Tomcat Version supplied in spring-boot-starter-tomcat -->
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-core</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-el</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-websocket</artifactId>
                <version>${tomcat.version}</version>
            </dependency>

            <!-- Tracing libraries for sending spans to zipkin -->
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave-apache-http-interceptors</artifactId>
                <version>${brave.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.brave</groupId>
                <artifactId>brave-spancollector-http</artifactId>
                <version>${brave.version}</version>
            </dependency>

            <!-- OData dependencies -->
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_client_api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_edm</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_parser</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_processor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_renderer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_controller</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_test</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_webservice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sdl</groupId>
                <artifactId>odata_client</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Project-wide dependencies -->
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Plugin Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.2</version>
                    <configuration>
                        <includes>
                            <include>com.sdl:*</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.1.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant</artifactId>
                            <version>1.9.3</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <archive>
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <forced>true</forced>
                            <manifestEntries>
                                <OData-build-version>
                                    <!--suppress MavenModelInspection -->
                                    ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${build.version}
                                </OData-build-version>
                                <OData-release-version>${project.version}</OData-release-version>
                                <Implementation-Title>${project.name}</Implementation-Title>
                                <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                                <Implementation-Version>${project.version}</Implementation-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>1.0-RC2</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Checkstyle -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>2.15</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>6.6</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.7.0.201403182114</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.18.1</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <properties>
                            <inceptionYear>${project.inceptionYear}</inceptionYear>
                            <latestYearOfContribution>${currentYearDynamic}</latestYearOfContribution>
                        </properties>
                        <header>${license.header.file}</header>
                        <excludes>
                            <exclude>src/license/**</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.9.1</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <flattenMode>ossrh</flattenMode>
                        </configuration>
                    </execution>
                    <execution>
                        <id>flatten-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>evaluate-build-version</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath" />
                                <!--suppress MavenModelInspection -->
                                <echo>parsedVersion.qualifier = ${parsedVersion.qualifier}</echo>
                                <if>
                                    <!--suppress MavenModelInspection -->
                                    <equals arg1="${parsedVersion.qualifier}" arg2="SNAPSHOT" />
                                    <then>
                                        <property name="build.version" value="${snapshot.qualifier.version}" />
                                    </then>
                                    <else>
                                        <!--suppress MavenModelInspection -->
                                        <property name="build.version" value="${parsedVersion.qualifier}" />
                                    </else>
                                </if>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-sources</id>
                        <configuration>
                            <includes>
                                <include>**/*.java</include>
                                <include>**/*.scala</include>
                                <include>**/pom.xml</include>
                            </includes>
                        </configuration>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <extensions>true</extensions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>code-coverage</id>
            <dependencies>
                <dependency>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <!--suppress MavenModelInspection -->
                    <version>${jacoco.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>post-test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>checkstyle</id>
            <activation>
                <file>
                    <missing>src/etc/no-checkstyle-on-compile.txt</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <configuration>
                            <configLocation>
                                odata_checkstyle/src/main/resources/sdl_common_checkstyle.xml
                            </configLocation>
                            <enableRulesSummary>true</enableRulesSummary>
                            <failOnViolation>true</failOnViolation>
                            <failsOnError>true</failsOnError>
                            <consoleOutput>true</consoleOutput>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>checkstyle-check</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <extensions>true</extensions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- This profile uses JaCoCo to check Java coverage. The results are shown in target/site/jacoco -->
            <id>coverage</id>
            <activation>
                <file>
                    <missing>src/etc/no-coverage.txt</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>coverage-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <propertyName>jacoco.agent.arg</propertyName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>coverage-report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>coverage-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <rule>
                                            <element>CLASS</element>
                                            <limits>
                                                <limit>
                                                    <counter>BRANCH</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>0.85</minimum>
                                                </limit>
                                                <limit>
                                                    <counter>CLASS</counter>
                                                    <value>MISSEDCOUNT</value>
                                                    <maximum>0</maximum>
                                                </limit>
                                                <limit>
                                                    <counter>CLASS</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>0.50</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                    <!--
                                            We are skipping the entire project for now as it would take a long time
                                            working on such coverage improvement at the moment and hence will be covered
                                            in a different story.
                                          -->
                                    <excludes>
                                        <!--odata_api -->
                                        <exclude>**/com/sdl/odata/api/**/*.class</exclude>
                                        <exclude>**/com/sdl/odata/util/**/*.class</exclude>
                                        <!--odata_edm -->
                                        <exclude>
                                            **/com/sdl/odata/edm/factory/annotations/*.class
                                        </exclude>
                                        <exclude>**/com/sdl/odata/edm/EdmConfiguration.class</exclude>
                                        <exclude>**/com/sdl/odata/edm/model/*.class</exclude>
                                        <exclude>**/com/sdl/odata/edm/registry/ODataEdmRegistryImpl.class</exclude>
                                        <!--odata_parser - skipping the entire package due to lack of coverage overall -->
                                        <exclude>**/com/sdl/odata/parser/*.class</exclude>
                                        <!--odata_renderer -->
                                        <exclude>**/com/sdl/odata/unmarshaller/json/ODataJsonParser.class</exclude>
                                        <exclude>**/com/sdl/odata/unmarshaller/json/JsonUnmarshaller.class</exclude>
                                        <exclude>**/com/sdl/odata/unmarshaller/json/JsonLinkUnmarshaller.class
                                        </exclude>
                                        <exclude>**/com/sdl/odata/unmarshaller/atom/*.class</exclude>
                                        <exclude>
                                            **/com/sdl/odata/unmarshaller/json/core/JsonPropertyExpander.class
                                        </exclude>
                                        <exclude>**/com/sdl/odata/unmarshaller/json/core/JsonParserUtils.class
                                        </exclude>
                                        <exclude>**/com/sdl/odata/ODataRendererUtils.class</exclude>
                                        <exclude>**/com/sdl/odata/renderer/xml/util/XMLWriterUtil.class</exclude>
                                        <exclude>com/sdl/odata/renderer/json/writer/*.class</exclude>
                                        <exclude>com/sdl/odata/renderer/metadata/MetadataDocumentRenderer.class
                                        </exclude>
                                        <exclude>com/sdl/odata/renderer/metadata/ServiceDocumentRenderer.class
                                        </exclude>
                                        <exclude>com/sdl/odata/renderer/metadata/*Writer.class</exclude>
                                        <exclude>com/sdl/odata/renderer/xml/**/*.class</exclude>
                                        <exclude>com/sdl/odata/renderer/primitive/**/*.class</exclude>
                                        <exclude>com/sdl/odata/renderer/batch/**/*.class</exclude>
                                        <exclude>com/sdl/odata/renderer/RendererFactoryImpl.class</exclude>
                                        <exclude>com/sdl/odata/renderer/AbstractRenderer.class</exclude>
                                        <exclude>com/sdl/odata/renderer/AbstractAtomRenderer.class</exclude>
                                        <exclude>com/sdl/odata/renderer/RendererConfiguration.class</exclude>
                                        <exclude>com/sdl/odata/renderer/AbstractJsonRenderer.class</exclude>
                                        <exclude>com/sdl/odata/renderer/atom/AtomRenderer.class</exclude>
                                        <exclude>com/sdl/odata/unmarshaller/*.class</exclude>
                                        <exclude>com/sdl/odata/unmarshaller/batch/*.class</exclude>
                                        <exclude>com/sdl/odata/renderer/atom/writer/*.class</exclude>
                                        <exclude>com/sdl/odata/renderer/json/JsonRenderer.class</exclude>
                                        <exclude>com/sdl/odata/renderer/json/JsonValueRenderer.class</exclude>
                                        <!--odata_processor -->
                                        <exclude>com/sdl/odata/processor/ODataQueryProcessorImpl.class</exclude>
                                        <exclude>com/sdl/odata/processor/QueryModelBuilder*.class</exclude>
                                        <exclude>**/JsonConstants.class</exclude>
                                        <exclude>**/ODataJsonActionParser.class</exclude>
                                        <exclude>**/AtomConstants.class</exclude>
                                        <exclude>**/ErrorRendererConstants.class</exclude>
                                        <exclude>**/MetadataDocumentConstants.class</exclude>
                                        <exclude>com/sdl/odata/processor/ProcessorConfiguration.class</exclude>
                                        <exclude>com/sdl/odata/processor/ODataWriteProcessorImpl.class</exclude>
                                        <exclude>com/sdl/odata/processor/write/**/*.class</exclude>
                                        <exclude>
                                            com/sdl/odata/processor/datasource/factory/DataSourceFactoryImpl.class
                                        </exclude>
                                        <!--odata_client-->
                                        <exclude>com/sdl/odata/client/exception/*.class</exclude>
                                        <exclude>com/sdl/odata/client/*.class</exclude>
                                        <exclude>com/sdl/odata/client/caller/BasicEndpointCaller.class</exclude>
                                        <exclude>com/sdl/odata/client/caller/TracingEndpointCaller.class</exclude>
                                        <!--odata_test-->
                                        <exclude>com/sdl/odata/test/util/**/*.class</exclude>
                                        <exclude>com/sdl/odata/test/model/*.class</exclude>
                                        <exclude>com/sdl/odata/test/model/cwd/*.class</exclude>
                                        <!--odata_service-->
                                        <exclude>com/sdl/odata/service/protocol/*.class</exclude>
                                        <exclude>com/sdl/odata/service/actor/*.class</exclude>
                                        <exclude>com/sdl/odata/service/util/*.class</exclude>
                                        <exclude>com/sdl/odata/service/spring/*.class</exclude>
                                        <exclude>com/sdl/odata/service/*.class</exclude>
                                        <!--odata_webservice-->
                                        <exclude>com/sdl/odata/webservice/*.class</exclude>
                                        <exclude>com/sdl/odata/container/*.class</exclude>
                                        <!--odata controller-->
                                        <exclude>**/ODataController.class</exclude>
                                        <exclude>**/ODataControllerConfiguration.class</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!--suppress MavenModelInspection -->
                            <argLine>${jacoco.agent.arg}</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>quick</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
